rm(list=ls())
n <- 1000
k <- 100
p <- 0.3
e <- 0.0001
p_hat <- rbinom(n,k,p+e)/k
z_scores <- (p_hat - p)/sqrt(p*(1-p)/k)
length(which(2*(1-pnorm(abs(z_scores)))<0.05))/n
rm(list=ls())
n <- 1000
k <- 100
p <- 0.3
e <- 1
p_hat <- rbinom(n,k,p+e)/k
z_scores <- (p_hat - p)/sqrt(p*(1-p)/k)
length(which(2*(1-pnorm(abs(z_scores)))<0.05))/n
rm(list=ls())
n <- 1000
k <- 100
p <- 0.3
e <- 0.00000000001
p_hat <- rbinom(n,k,p+e)/k
z_scores <- (p_hat - p)/sqrt(p*(1-p)/k)
length(which(2*(1-pnorm(abs(z_scores)))<0.05))/n
rm(list=ls())
n <- 1000
k <- 0
p <- 0.3
e <- 0.0001
p_hat <- rbinom(n,k,p+e)/k
z_scores <- (p_hat - p)/sqrt(p*(1-p)/k)
length(which(2*(1-pnorm(abs(z_scores)))<0.05))/n
rm(list=ls())
n <- 1000
k <- 0.005
p <- 0.3
e <- 0.0001
p_hat <- rbinom(n,k,p+e)/k
z_scores <- (p_hat - p)/sqrt(p*(1-p)/k)
length(which(2*(1-pnorm(abs(z_scores)))<0.05))/n
rm(list=ls())
n <- 1000
k <- 10000000
p <- 0.3
e <- 0.0001
p_hat <- rbinom(n,k,p+e)/k
z_scores <- (p_hat - p)/sqrt(p*(1-p)/k)
length(which(2*(1-pnorm(abs(z_scores)))<0.05))/n
rm(list=ls())
n <- 1000
k <- 100
p <- 0.3
e <- 0.0001
p_hat <- rbinom(n,k,p+e)/k
z_scores <- (p_hat - p)/sqrt(p*(1-p)/k)
length(which(2*(1-pnorm(abs(z_scores)))<0.05))/n
p <- seq.int(from=1, to=99, by=1)/100
n <- 1000
prop_samples <- vector(length = length(p))
for(i in 1:length(p)){
prop_samples[i] <- rbinom(1, n, p[i])/n
}
MoE <- sqrt(p*(1-p)/n)
plot(MoE)
p <- seq.int(from=1, to=99, by=1)/100
n <- 1000
prop_samples <- vector(length = length(p))
for(i in 1:length(p)){
prop_samples[i] <- rbinom(1, n, p[i])/n
}
MoE <- 1.96*sqrt(p*(1-p)/n)
plot(MoE)
---
title: "TX Hospital Region Boxplot"
author: "Kyle DeQuesnay, Jeffrey Feng,Brandon Kerbow, Derek Orji"
resource_files:
- .Renviron
output:
html_notebook:
code_folding: hide
toc: yes
toc_depth: 4
toc_float: yes
runtime: shiny
---
```{r setup, echo=FALSE, message=FALSE}
library(tidyverse)
library(shiny)
library(grid)
library(data.world)
library(DT)
library(shinydashboard)
library(plotly)
library(lubridate)
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
project <- "https://data.world/jeffery-feng/s18-edv-project-3-dataset"
data.world::set_config(cfg_env("DW_API"))
countries <- data.world::query(data.world::qry_sql(
"
select distinct WHO_Cleanest.country from WHO_Cleanest
"),
dataset = project)
```
```{r}
project <- "https://data.world/jeffery-feng/s18-edv-project-3-dataset"
data.world::set_config(cfg_env("DW_API"))
proportion <- data.world::query(data.world::qry_sql(
"
select distinct WHO_Cleanest.population_proportion_under_15
from WHO_Cleanest
"),
dataset = project)
```
```{r}
project <- "https://data.world/jeffery-feng/s18-edv-project-3-dataset"
data.world::set_config(cfg_env("DW_API"))
children <- data.world::query(data.world::qry_sql(
"
select distinct WHO_Cleanest.children_per_woman from WHO_Cleanest
"),
dataset = project)
```
```{r}
df <- eventReactive(c(input$selectChildren_1, input$selectProportion_1), {
project <- "https://data.world/jeffery-feng/s18-edv-project-3-dataset"
data.world::set_config(cfg_env("DW_API"))
paramQuery <- data.world::qry_sql(
"
select country, children_per_woman, population_proportion_under_15
from WHO_Cleanest h
where children_per_woman between ? and ? and population_proportion_under_15 between ? and ? and country in ('China', 'India', 'United States of America', 'Indonesia', 'Brazil', 'Pakistan', 'Bangladesh', 'Nigeria', 'Russia', 'Japan')
order by Country
")
paramQuery$params <- c(input$selectChildren_1[1], input$selectChildren_1[2], selectChildren_1[1], selectChildren_1[2])
data.world::query(paramQuery, dataset = project)
})
```
```{r}
Countries <- eventReactive(c(input$selectCountries_1), {
library('stringr')
str_c(input$selectCountries_1, collapse=', ')
})
```
```{r}
Proportions <- eventReactive(c(input$selectProportions_1), {
library('stringr')
str_c(input$selectProportions_1, collapse=', ')
})
```
```
#Boxplot 2 - Average Total Payment vs Region
This boxplot can be viewed by clicking the blue "Average Total Payment vs Region" button next to the plot below. This visual shows the distribution of the average total payments for the ten regions which generate the most revenue. Each color corresponds to a different DRG Definition, allowing the user to make comparisons across both city and disease. For example, when we plot vascular problems, heart failures and renal failures across the regions we see that vascular problems incur the highest payments in the Houston and Dallas region, which could imply either a higher quality of service or a shortage of cardiovascular doctors in the region.
```{r}
inputPanel(
selectInput
("selectCountries_1", label = "Select Countries",choices = countries, multiple=TRUE, selected=c("China", "India", "Bangladesh", "Indonesia", "Russia", "Japan", "Brazil", "Nigeria", "United States of America", "Pakistan")
)
,sliderInput("selectChildren_1", label = "Children per woman:", min = 0, max = 8, value = c(0, 8), step = .5)
)
```
```{r}
dashboardPage(
dashboardHeader(
),
dashboardSidebar(
sidebarMenu(
menuItem("proportion of population under 15", tabName = "boxplot1", icon = icon("dashboard1"))
)
),
dashboardBody(
tabItems(
# 1. "Average Total Payment vs Region" tab content
tabItem(tabName = "boxplot1",
source("BoxPlot1UI.R",local = TRUE)$value
)
)
)
)
```
```
